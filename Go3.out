PACKAGE : package
IDENTIFIER : main
IMPORT : import
STRING_LIT : "fmt"
FUNC : func
IDENTIFIER : main
OPEN_PARAN : (
CLOSE_PARAN : )
OPEN_CURLY : {
IF : if
INT_LIT : 7
PERCENT : %
INT_LIT : 2
REL_OP : ==
INT_LIT : 0
OPEN_CURLY : {
IDENTIFIER : fmt
DOT : .
IDENTIFIER : Println
OPEN_PARAN : (
STRING_LIT : "7 is even"
CLOSE_PARAN : )
CLOSE_CURLY : }
ELSE : else
OPEN_CURLY : {
IDENTIFIER : fmt
DOT : .
IDENTIFIER : Println
OPEN_PARAN : (
STRING_LIT : "7 is odd"
CLOSE_PARAN : )
CLOSE_CURLY : }
IF : if
INT_LIT : 12
PERCENT : %
INT_LIT : 4
REL_OP : ==
INT_LIT : 0
AND_OP : &&
INT_LIT : 12
PERCENT : %
INT_LIT : 3
REL_OP : ==
INT_LIT : 0
OPEN_CURLY : {
IDENTIFIER : fmt
DOT : .
IDENTIFIER : Println
OPEN_PARAN : (
STRING_LIT : "12 is divisible by 4, and 3"
CLOSE_PARAN : )
CLOSE_CURLY : }
IF : if
IDENTIFIER : num
COLON_EQUAL : :=
INT_LIT : 9
SEMI_COLON : ;
IDENTIFIER : num
REL_OP : <
INT_LIT : 0
OPEN_CURLY : {
IDENTIFIER : fmt
DOT : .
IDENTIFIER : Println
OPEN_PARAN : (
IDENTIFIER : num
COMMA : ,
STRING_LIT : "is negative"
CLOSE_PARAN : )
CLOSE_CURLY : }
ELSE : else
IF : if
IDENTIFIER : num
REL_OP : <
INT_LIT : 10
OPEN_CURLY : {
IDENTIFIER : fmt
DOT : .
IDENTIFIER : Println
OPEN_PARAN : (
IDENTIFIER : num
COMMA : ,
STRING_LIT : "has 1 digit"
CLOSE_PARAN : )
CLOSE_CURLY : }
ELSE : else
OPEN_CURLY : {
IDENTIFIER : fmt
DOT : .
IDENTIFIER : Println
OPEN_PARAN : (
IDENTIFIER : num
COMMA : ,
STRING_LIT : "has multiple digits"
CLOSE_PARAN : )
CLOSE_CURLY : }
CLOSE_CURLY : }
EOF: Done
